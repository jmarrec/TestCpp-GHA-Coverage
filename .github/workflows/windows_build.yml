name: C++ CI Windows Clang

on:
  push:
    branches: [ main, Windows ]
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install conan and openccpcoverage
      run: |
          python --version
          pip install conan gcovr
          conan --version
          echo "Enabling conan revisions and setting parallel_download"
          conan config set general.revisions_enabled=True
          conan config set general.parallel_download=8
          conan user


    - name: Install deps
      run: |
        mkdir build
        echo "Using chocolatey to install OpenCppCoverage"
        choco install opencppcoverage
        echo "Using chocolatey to install ninja"
        choco install ninja

        # C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise
        MSVC_DIR=$(cmd.exe /c "vswhere -products * -requires Microsoft.Component.MSBuild -property installationPath -latest")
        echo "Latest is: $MSVC_DIR"
        echo "MSVC_DIR=$MSVC_DIR" >> $GITHUB_ENV
        # add folder containing vcvarsall.bat
        echo "$MSVC_DIR\VC\Auxiliary\Build" >> $GITHUB_PATH

    - name: CMake configure
      working-directory: ./build
      shell: cmd
      run: |
        echo "Using vcvarsall to initialize the development environment"
        call vcvarsall.bat x64
        cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DENABLE_COVERAGE:BOOL=ON ../

    - name: Build
      working-directory: ./build
      run: |
        ninja

    - name: Produce coverage report
      working-directory: ./build
      shell: bash
      run: |
        set -x
        OpenCppCoverage --sources ../* ./Products/testlib_tests
        gcovr -j $(nproc) --delete --root ../ --exclude '.*GTest.cpp' --xml-pretty --xml coverage.xml .

    - name: Publish to codecov
      uses: codecov/codecov-action@v2
      with:
        flags: ${{ runner.os }}
        name: ${{ runner.os }}-coverage
        files: ./build/coverage.xml
