name: C++ CI Windows

on:
  push:
    branches: [ main ]
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install conan
      run: |
          python --version
          pip install conan gcovr
          conan --version
          echo "Enabling conan revisions and setting parallel_download"
          conan config set general.revisions_enabled=True
          conan config set general.parallel_download=8
          conan user

    - name: Setup QtIFW 4.x
      uses: jmarrec/setup-qtifw@v1
      with:
        qtifw-version: '4.x'

    - name: Install deps
      shell: bash
      run: |
        mkdir build
        echo "Using chocolatey to install OpenCppCoverage"
        choco install opencppcoverage
        echo "C:/Program Files/OpenCppCoverage" >> $GITHUB_PATH

        echo "Using chocolatey to install ninja"
        choco install ninja

        # C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise
        MSVC_DIR=$(cmd.exe /c "vswhere -products * -requires Microsoft.Component.MSBuild -property installationPath -latest")
        echo "Latest is: $MSVC_DIR"
        echo "MSVC_DIR=$MSVC_DIR" >> $GITHUB_ENV
        # add folder containing vcvarsall.bat
        echo "$MSVC_DIR\VC\Auxiliary\Build" >> $GITHUB_PATH

    - name: CMake configure & build
      working-directory: ./build
      shell: cmd
      run: |
        echo "Using vcvarsall to initialize the development environment"
        call vcvarsall.bat x64
        # Note ENABLE_COVERAGE isn't an option on MSVC, it works differently
        cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Debug -DCPACK_BINARY_IFW:BOOL=ON -DCPACK_BINARY_NSIS:BOOL=OFF ../
        # We need vcvarsall.bat to be called in the current step where ninja is invoked, so do that here as well
        ninja

    - name: Produce coverage report
      working-directory: ./build
      run: |
        OpenCppCoverage.exe --sources TestCpp-GHA-Coverage\src --export_type cobertura:coverage.xml --cover_children -- ctest -C Debug

    - name: Publish to codecov
      uses: codecov/codecov-action@v2
      with:
        flags: ${{ runner.os }}
        name: ${{ runner.os }}-coverage
        files: ./build/coverage.xml

    - name: Build package
      working-directory: ./build
      shell: bash
      run: |
        set -x
        ninja package

    - name: Upload Binary installer to release
      if: contains(github.ref, 'refs/tags')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/_CPack_Packages/win64/IFW/*.exe
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

#    - name: Sign binary
#      working-directory: ./build
#      shell: powershell
#      run: |
#        Install-Module -Name SignPath -Force
#
#        Submit-SigningRequest `
#        -InputArtifactPath "_CPack_Packages/win64/IFW/TestCppCoverage-0.0.1-win64.exe" `
#        -CIUserToken "${{ secrets.SIGNPATH_CI_TOKEN }}" `
#        -OrganizationId "464ceae8-d89f-429b-9104-9a69f83d0b1d" `
#        -ProjectSlug "TestCpp20" `
#        -SigningPolicySlug "No_approval" `
#        -OutputArtifactPath "TestCppCoverage-0.0.1-win64-signed.exe" `
#        -WaitForCompletion
#
#    - name: Upload Signed Binary installer to release
#      if: contains(github.ref, 'refs/tags')
#      uses: svenstaro/upload-release-action@v2
#      with:
#        repo_token: ${{ secrets.GITHUB_TOKEN }}
#        file: build/TestCppCoverage-0.0.1-win64-signed.exe
#        tag: ${{ github.ref }}
#        overwrite: true
#        file_glob: true


    - name: make pfx
      working-directory: ./build
      shell: powershell
      run: |
        New-Item -ItemType directory -Path certificate
        Set-Content -Path certificate\certificate.txt -Value '${{ secrets.SELF_SIGNED_CERTIFICATE_PFX_BASE64 }}'
        certutil -decode certificate\certificate.txt certificate\certificate.pfx

    - name: Sign binary with self signing certificate
      working-directory: ./build/
      shell: cmd
      run: |
        echo "Using vcvarsall to initialize the development environment"
        call vcvarsall.bat x64

        signtool sign /tr http://timestamp.globalsign.com/tsa/r6advanced1 /td sha256 /fd sha256 /f certificate\certificate.pfx /p ${{ secrets.SELF_SIGNED_CERTIFICATE_PFX_PASSWORD }} Products\testlib_tests.exe

        cpack

        mv TestCppCoverage-0.0.1-win64.exe TestCppCoverage-0.0.1-win64-self_signed.exe

        signtool sign /tr http://timestamp.globalsign.com/tsa/r6advanced1 /td sha256 /fd sha256 /f certificate\certificate.pfx /p ${{ secrets.SELF_SIGNED_CERTIFICATE_PFX_PASSWORD }} TestCppCoverage-0.0.1-win64-self_signed.exe

    - name: Upload Self-Signed Binary installer to release
      if: contains(github.ref, 'refs/tags')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/TestCppCoverage-0.0.1-win64-self_signed.exe
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
